FROM node:18-alpine AS base

RUN apk add --no-cache libc6-compat
WORKDIR /app

FROM base AS builder
WORKDIR /app

RUN corepack enable && corepack prepare pnpm@latest --activate

COPY pnpm-lock.yaml pnpm-workspace.yaml package.json ./
COPY packages ./packages
COPY apps ./apps


RUN pnpm -w install --frozen-lockfile

WORKDIR /app/apps/teampage
RUN pnpm run build
RUN pnpm -w -F teampage deploy --prod /opt/teampage || true

FROM node:18-alpine AS runner
RUN apk add --no-cache libc6-compat
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder --chown=nextjs:nodejs /app/apps/teampage/.next/standalone /app
COPY --from=builder --chown=nextjs:nodejs /app/apps/teampage/.next/static /app/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/node_modules /app/node_modules
COPY --from=builder --chown=nextjs:nodejs /app/apps/teampage/node_modules /app/apps/teampage/node_modules

USER nextjs
ENV NODE_PATH=/app/apps/teampage/node_modules:/app/node_modules
WORKDIR /app
EXPOSE 80
ENV PORT=80
ENV HOSTNAME="0.0.0.0"
CMD ["node", "server.js"]